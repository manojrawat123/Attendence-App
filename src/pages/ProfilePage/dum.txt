
import React, { useContext, useEffect, useState } from 'react';
import { View, StyleSheet, Text } from 'react-native';
import Background from '../../component/Background';
import { darkGreen, green } from '../../component/Constants';
import Btn from '../../component/Btn';
import * as Location from "expo-location";
import axios from 'axios';
import { API_BASE_URL } from '../../config';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { DataContext } from '../../context';


const Profile = (props) => {
    const [position , setPosition] = useState(); 
    const [token, setToken] = useState();
    const [id, setId] = useState();
    const [attendence_id, setAttendenceId] = useState();
    const {checkinId,
        getCheckInId
    } = useContext(DataContext)

    const getPermissions = async ()=>{
        let { status } = await Location.requestForegroundPermissionsAsync();
         const accessToken = await AsyncStorage.getItem('accessToken');
         const id = await AsyncStorage.getItem('id');
         setId(id);
        setToken(accessToken);
        if (status !== "granted"){
            console.log("Please Grant Permission");
        return;
        }
        let currentLocation = await Location.getCurrentPositionAsync({})
        setPosition(currentLocation);
       }

    useEffect(() => {
       getPermissions();
       getCheckInId();
      }, []);

      const checkInFunc = ()=>{
        axios.post(`${API_BASE_URL}/checkin/`, 
        {
            lattitude  : position?.coords.latitude,
            longitude : position?.coords?.longitude,
            user : id
        },
        {
            headers : {
                "Authorization" : `Bearer ${token}`
            }
        }
        ).then(async (value)=>{
            console.log(value.data);
           const id = await AsyncStorage.setItem("attendence_id",`${value.data?.attendence_id}`);
           await getCheckInId();

        }).catch((err)=>{
            console.log({"Internal Server Error" : err.response.data});
        })
      }

      const checkOutFunc = async ()=>{
        const attendence_id = await AsyncStorage.getItem("attendence_id");
        axios.put(`${API_BASE_URL}/checkin/${attendence_id}/`, {
            user : id
        }, 
        {
            headers : {
                "Authorization" : `Bearer ${token}`
            }
        }).then(()=>{
            AsyncStorage.removeItem("attendence_id");
        }).catch((err)=>{
            console.log(err);
        })
      }

    return (
        <Background>
            {console.log({"Line Number 75 : " : checkinId })}
            <View style={{ marginHorizontal : 40, marginVertical : 100 }}>
                <Text style={{ color: 'white', fontSize: 64 }}>Let's start</Text>
                <Text style={{ color: 'white', fontSize: 64, marginBottom: 40 }}>Future</Text>
                {
                    checkinId ?
                    <Btn bgColor='white' textColor={darkGreen} btnLabel="Checkout" Press={checkOutFunc} />
                    :
                    <Btn bgColor={green} textColor='white' btnLabel="Check In" Press={checkInFunc} /> 
                }
            </View>
        </Background>
    );
}

const styles = StyleSheet.create({});

export default Profile;
